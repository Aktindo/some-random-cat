{"meta":{"generator":"0.9.0","format":20,"date":1625638898164},"custom":{"general":{"name":"General","files":{"README":{"name":"Welcome","type":"md","content":"# Introduction\r\n\r\n[![NPM](https://nodei.co/npm/some-random-cat.png)](https://nodei.co/npm/some-random-cat/)\r\n\r\n![Total Downloads](https://img.shields.io/npm/dt/some-random-cat?style=flat&label=Downloads) ![Discord](https://img.shields.io/discord/772129415005470740?color=%237289DA&label=chat&logo=Discord&style=flat) ![npm](https://img.shields.io/npm/v/some-random-cat?style=flat) ![NPM](https://img.shields.io/npm/l/some-random-cat?style=flat) ![GitHub Repo stars](https://img.shields.io/github/stars/aktindo/some-random-cat?style=flat)\r\n\r\nThis is the official documentation for some-random-cat. Docs version \\(v2.0\\)\r\n\r\n## Installation\r\n\r\nTo install the package, you would have to make sure that node.js is installed on your machine. After that, you can simply do `npm i some-random-cat` in the terminal where you want to install the package or `npm i some-random-cat -g` to install it globally.\r\n\r\n## About\r\n\r\nI saw that there were not many good packages for generating random stuff. So I decided to make one.  \r\nA very suitable API to generate random images of cats, dogs and random jokes, facts... A lot more!\r\n\r\n## Why?\r\n\r\n* Object-oriented\r\n* Speedy and efficient\r\n* Feature-rich\r\n* Easy\r\n* Beginner-Friendly\r\n* Flexible\r\n\r\n## Example\r\n\r\nGenerate a random cat image:\r\n\r\n```javascript\r\nconst SomeRandomCat = require('../index').Random; // Replace ../index with some-random-cat\r\nSomeRandomCat.getCat() // Function for generating cat\r\n.then(res => {\r\n    console.log(res)\r\n    return\r\n})\r\n.catch(e => {\r\n    console.error(e)\r\n    return\r\n});\r\n```\r\n\r\n## Contributing\r\n\r\nTo contribute in this package, simple open a pull request in the github repository. When all the checks for your request have been passed, we can merge it into the main branch.\r\n\r\n## Statistics\r\n\r\n* 200 weekly downloads\r\n* and... growing!\r\n\r\n## Support\r\nJoin the support server [here](https://discord.gg/HEQxjNqE)\r\n\r\n## Documentation\r\nðŸ“– The official documentation is now available [here](https://somerandomcat.js.org)\r\n\r\n","path":"README.md"}}}},"classes":[{"name":"Generation","description":"<p>Manages all the generation methods and allow you to gen stuff.</p>","construct":{"name":"Generation","description":"<p>âš  Please do not instantiate this class.</p>"},"methods":[{"name":"shorten","description":"<p>Shortens some text and substrings it with a ... at the end.</p>","params":[{"name":"text","description":"<p>Text to perform operation on.</p>","type":[[["string"]]]},{"name":"number","description":"<p>The max length of the string.</p>","type":[[["length"]]]}],"meta":{"line":58,"file":"Generation.ts","path":"src/classes"}},{"name":"generateId","description":"<p>Generate a secure UUID.</p>","scope":"static","params":[{"name":"ops","description":"<p>The options to generate ID.</p>","type":[[["generateIdProps"]]]}],"meta":{"line":15,"file":"Generation.ts","path":"src/classes"}},{"name":"getAcronym","description":"<p>Generate an acronym.</p>","scope":"static","params":[{"name":"name","description":"<p>The options to generate ID.</p>","type":[[["string"]]]}],"meta":{"line":45,"file":"Generation.ts","path":"src/classes"}}],"meta":{"line":5,"file":"Generation.ts","path":"src/classes"}},{"name":"Random","description":"<p>Manages all the random methods and is the main module.</p>","construct":{"name":"Random","description":"<p>âš  Please do not instantiate this class.</p>"},"methods":[{"name":"getAdvice","description":"<p>Get a random advice.</p>","scope":"static","async":true,"meta":{"line":17,"file":"Random.ts","path":"src/classes"}},{"name":"getCat","description":"<p>Get a random cat.</p>","scope":"static","async":true,"meta":{"line":36,"file":"Random.ts","path":"src/classes"}},{"name":"getDog","description":"<p>Get a random dog.</p>","scope":"static","async":true,"meta":{"line":56,"file":"Random.ts","path":"src/classes"}},{"name":"getFact","description":"<p>Get a random fact.</p>","scope":"static","async":true,"meta":{"line":72,"file":"Random.ts","path":"src/classes"}},{"name":"getJoke","description":"<p>Get a random joke.</p>","scope":"static","async":true,"meta":{"line":83,"file":"Random.ts","path":"src/classes"}},{"name":"getMeme","description":"<p>Get a random meme.</p>","scope":"static","params":[{"name":"sub","description":"<p>The subreddit's name.</p>","type":[[["string"]]]}],"async":true,"returns":{"types":[[["Promise","<("],["object","|"],["void",")>"]]],"description":"<p>Returns an object with a promise.</p>"},"meta":{"line":95,"file":"Random.ts","path":"src/classes"}},{"name":"getPokemon","description":"<p>Get a random pokemon.</p>","scope":"static","params":[{"name":"pokemon","description":"<p>The name of the pokemon.</p>","type":[[["string"]]]}],"async":true,"returns":{"types":[[["Promise","<("],["string","|"],["void",")>"]]],"description":"<p>Returns a string.</p>"},"meta":{"line":129,"file":"Random.ts","path":"src/classes"}},{"name":"getString","description":"<p>Get a string.</p>","scope":"static","params":[{"name":"number","description":"<p>The length of the string</p>","type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<("],["string","|"],["void",")>"]]],"description":"<p>Returns a string.</p>"},"meta":{"line":150,"file":"Random.ts","path":"src/classes"}},{"name":"getTopic","description":"<p>Get a topic.</p>","scope":"static","async":true,"returns":{"types":[[["Promise","<("],["string","|"],["void",")>"]]],"description":"<p>Returns a string with the topic.</p>"},"meta":{"line":170,"file":"Random.ts","path":"src/classes"}}],"meta":{"line":7,"file":"Random.ts","path":"src/classes"}},{"name":"Util","description":"<p>A utility class.</p>","construct":{"name":"Util","description":"<p>âš  Please do not instantiate this class.</p>"},"methods":[{"name":"getInfo","description":"<p>Gets some information on the package.</p>","scope":"static","meta":{"line":14,"file":"Util.ts","path":"src/classes"}}],"meta":{"line":3,"file":"Util.ts","path":"src/classes"}}],"interfaces":[],"typedefs":[],"externals":[]}
